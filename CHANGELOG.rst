ChangeLog
=========

0.5.3
-----

* Удалено использование pip API в связи с тем, что в версии 10 оно было
  закрыто.

0.5.1
-----

* Для атрибута ``max_content_length`` элемента ``Application``, который
  позволяет указать максимальный размер запроса для WSGI Application,
  добавлено явное приведение к целому типу.

0.5.0
-----

* Добавлена поддержка Python 3.6.

0.4.0
-----

* Для элемента ``Application`` добавлен опциональный целочисленный атрибут
  ``max_content_length``, который позволяет указать максимальный размер запроса
  для WSGI Application.

0.3.1
-----

* Версия содержит изменения для совместимости с Django 1.10.

0.3.0
-----

* Версия содержит изменения для совместимости с Django 1.9.

0.2.2
-----

* Добавлена мета-информация в запрос.

0.2.1
-----

* Убрана проверка на ``settings.WSFACTORY_DEBUG`` при определении устравания
  хэша настроек ``Settings``.

0.2.0
-----

* **BREAKING CHANGES:**

  Имеется тег API описывающий метод. Он содержит атрибуты code (идентифицирует
  метод и служит наименованием входного сообщения), module (путь до исходников
  в проекте), name(описание). Появилась необходимость разделить ответственность
  code на "идентификацию" и "наименование".

  **Для этого:**
  В тег API был добавлен атрибут ``id``, выполняющий роль идентификатора
  метода. Привязка к ``Service/Api`` происходит по ``Id``. Отсутствует обратная
  совместимость. При переходе на новую версию ``wsfactory`` необходимо будет:

  * В ``ApiRegistry/Api`` добавить атрибут ``id``.
  * В ``Service/Api`` переименовать code на ``id``.

0.1.5
-----

* фикс ``SyntaxError``.

0.1.4 (НЕРАБОЧАЯ ВЕРСИЯ!)
-------------------------

* добавлен атрибут ``url`` в элементе конфигурации ``Application``, который
  позволяет установить regex url pattern для сервиса. Этот же сервис также
  будет доступен по ``url`` по умолчанию ---
  ``/wsfactory/api/<Application["name"]>``.
